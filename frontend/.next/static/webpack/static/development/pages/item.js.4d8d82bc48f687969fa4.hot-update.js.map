{"version":3,"file":"static/webpack/static/development/pages/item.js.4d8d82bc48f687969fa4.hot-update.js","sources":["webpack:///./components/SingleItem.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport Error from \"./ErrorMessage\";\nimport styled from \"styled-components\";\nimport Head from \"next/head\";\n\nconst SingleItemStyle = styled.div`\n  max-width: 1200px;\n  margin: 2rem auto;\n  box-shadow: ${props => props.theme.bs};\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  .details {\n    margin: 3rem;\n    font-size: 2rem;\n  }\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      largeImage\n    }\n  }\n`;\n\nclass SingleItem extends Component {\n  render() {\n    return (\n      <Query\n        query={SINGLE_ITEM_QUERY}\n        variables={{\n          id: this.props.id\n        }}\n      >\n        {({ error, loading, data }) => {\n          if (error) return <Error error={error} />;\n          if (loading) return <p>Loading</p>;\n          if (!data.item) return <p>No item found for id: {this.props.id}</p>;\n\n          const item = data.item;\n          return (\n            <SingleItemStyle>\n              <Head>\n                <title>Sick Fits | {item.title} </title>\n              </Head>\n              <img src={item.largeImage} slt={item.title} />\n              <div className=\"detials\">\n                <h2>Viewing {item.title}</h2>\n                <p>{item.description}</p>\n              </div>\n            </SingleItemStyle>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default SingleItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAgBA;AACA;AAUA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AA9BA;AACA;AAgCA;;;;A","sourceRoot":""}